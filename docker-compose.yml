version: '3.8'

services:
  db:
    image: postgres
    container_name: pgdb-e-shop
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - e-shop-network

  django:
    build:
      context: ./
      dockerfile: ./dockerfiles/django/Dockerfile
      args:
        - DEV=${DEV}
    container_name: django
    # Change env_file to ./.env in production:
    env_file:
      - ./.dev.env
    ports:
      - "8000:8000"
    command: >
      sh -c "cd backend &&
             python manage.py wait_for_db &&
             python manage.py migrate &&
             gunicorn config.wsgi --bind=0.0.0.0:8000"
    volumes:
      - ./backend:/home/backend-user/app/backend
      - coverage:/home/backend-user/app/coverage
    depends_on:
      - db
    networks:
      e-shop-network:
        aliases:
          - django

  nginx:
    image: nginx:1.23.3-alpine-slim
    container_name: nginx
    volumes:
      - ./dockerfiles/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - e-shop-network
    depends_on:
      - django

volumes:
  postgres_data:
  coverage:


networks:
  e-shop-network:
